hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
# avec un histogramme
hist(df$poids,main="Poids",col="red",xlab="Poids",ylab="Fréquence")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "green", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
std
summary(df$poids)
s<-summary(df$poids)
s
help(summary)
s$
quantile.type
s$quantile.type
# avec un histogramme
hist(df$poids,main="Poids",col="red",xlab="Poids",ylab="Fréquence")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
k <- cols[findInterval(df$poids, quantile(x), rightmost.closed=T, all.inside=F) + 1]
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(x), rightmost.closed=T, all.inside=F) + 1]
quantiles(df$poids)
library("dplyr")
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(x), rightmost.closed=T, all.inside=F) + 1]
library("dplyr")
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
quantiles(df$poids)
quantile(df$poids)
df$poids
df <- data.frame(taille=c(173,175,168,172,173,170,175,172,180),
poids=c( 69, 81, 55, 64, 66, 70, 75, 71,77),
sexe=c( "M","M","F","F","F","M","M","F","F"),
row.names=c("Patrick","Jacques","Pauline","Marie","Eva","Eric", "Paul", "Christine","Madeleine")
)
df
#moyenne
mn<-mean(df$poids)
mn
#écart-type
std<-sd(df$poids)
std
#médiane
md<-median(df$poids)
md
# Il existe une fonction simple qui nous donne quelques informations
summary(df$poids)
# avec un histogramme
hist(df$poids,main="Poids",col="red",xlab="Poids",ylab="Fréquence")
library("dplyr")
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
quantile(df$poids)
df <- data.frame(taille=c(173,175,168,172,173,170,175,172,180),
poids=c( 69, 80, 55, 64, 66, 70, 75, 71,77),
sexe=c( "M","M","F","F","F","M","M","F","F"),
row.names=c("Patrick","Jacques","Pauline","Marie","Eva","Eric", "Paul", "Christine","Madeleine")
)
df
# avec un histogramme
hist(df$poids,main="Poids",col="red",xlab="Poids",ylab="Fréquence")
library("dplyr")
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
df <- data.frame(taille=c(173,175,168,172,173,170,175,172,180),
poids=c( 69, 81, 55, 64, 66, 70, 75, 71,77),
sexe=c( "M","M","F","F","F","M","M","F","F"),
row.names=c("Patrick","Jacques","Pauline","Marie","Eva","Eric", "Paul", "Christine","Madeleine")
)
df
# avec un histogramme
hist(df$poids,main="Poids",col="red",xlab="Poids",ylab="Fréquence")
library("dplyr")
cols <- c('grey', "#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
library("dplyr")
cols <- c('yellow', "red", "blue")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
library("dplyr")
cols <- c('yellow', "red", "blue","orange")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
library("dplyr")
cols <- c('yellow', "red", "orange","pink")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
library("dplyr")
cols <- c('yellow', "red", "orange","pink","yellow")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
library("dplyr")
cols <- c('yellow', "red", "orange","pink","yellow")
k <- cols[findInterval(df$poids, quantile(df$poids), rightmost.closed=T, all.inside=F) + 1]
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
abline(v = mn-std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col=k,xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
#On ajoute le σ
abline(v = mn-std, col = "yellow", lwd = 2)
abline(v = mn+std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
#On ajoute le σ
abline(v = mn-std, col = "yellow", lwd = 2)
abline(v = mn+std, col = "yellow", lwd = 2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "green", lwd = 2)
#On ajoute le σ
abline(v = mn-std, col = "black", lwd = 2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 2)
#On ajoute le σ
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute le σ
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une bpîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#avec la densité plutôt que la fréquence
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa représentation sous forme de courbe
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#Comme elle l'est, on propose un histogramme proposant la densité de probabilité (avec la densité plutôt que la fréquence en ordonnée, avec le paramètre `freq=F`)
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa fonction gaussienne
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#Comme elle l'est, on propose un histogramme proposant la densité de probabilité (avec la densité plutôt que la fréquence en ordonnée, avec le paramètre `freq=F`)
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa fonction gaussienne
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "darkgrey", lwd = 2,lty=2)
abline(v = mn+std, col = "darkgrey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#Comme elle l'est, on propose un histogramme proposant la densité de probabilité (avec la densité plutôt que la fréquence en ordonnée, avec le paramètre `freq=F`)
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa fonction gaussienne
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
#On peut vérifier si la distribution est normale avec `qqplot`
qqnorm(df$poids,main="Poids (distribution)")
#Comme elle l'est, on propose un histogramme proposant la densité de probabilité (avec la densité plutôt que la fréquence en ordonnée, avec le paramètre `freq=F`)
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# en ajoutant à l'histogramme sa fonction gaussienne
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
qqnorm(df$poids,main="Poids (distribution)")
qqnorm(df$poids,main="Poids (distribution)")
#on affiche la densité plutôt que la fréquence en ordonnée avec le paramètre `freq=F`
hist(df$poids,main="Poids",freq=F,col="red",xlab="Poids",ylab="Densité")
# On ajoute la fonction gaussienne
curve(dnorm(x, mean=mn, sd=std), add=T, col="darkblue", lwd=4)
# On ajoute la moyenne
abline(v = mn, col = "black", lwd = 4)
#On ajoute les σ/quantiles
abline(v = mn-std, col = "grey", lwd = 2,lty=2)
abline(v = mn+std, col = "grey", lwd = 2,lty=2)
#Ou en faisant une boîte à moustache
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
boxplot(df$poids,main="Poids")
#une boîte à moustache de la taille et du poids (assez inutile d'un point de vue graphique…)
boxplot(df[-3],main="Poids")
for (i in 1:5){
print(i)
}
for (i in 1:5){
print(i)
}
for (i in df$sexe){
if(i=="M"){
print("c'est un garçon")
}
}
for (i in df$sexe){
if(i=="M"){
print("c'est un garçon")
}else
{print("c'est une fille")}
}
afficher_le_sexe<-function(nom_de_variable){
for (i in nom_de_variable){
print(i)
}
}
afficher_le_sexe(df$sexe)
afficher_le_sexe<-function(nom_de_variable){
for (i in nom_de_variable){
print(i)
}
}
afficher_le_sexe(df$sexe)
help(hist)
#install.packages("rtweet")
library(rtweet)
#View(tweets)
tweets_UniGE
tweets_UniGE <- search_tweets("Sciences_UNIGE", n = 1000)
#View(tweets)
tweets_UniGE
head(tweets_UniGE$text)
plot(tweets_UniGE$created_at)
#install.packages("ggplot2")
library(ggplot2)
nouv_graph<-ggplot(tweets, aes(x = created_at)) + geom_histogram()
#install.packages("ggplot2")
library(ggplot2)
nouv_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram()
nouv_graph
head(tweets_UniGE$created_at)
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets, aes(x = created_at)) + geom_histogram(binwidth = 5000) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "6 hours",
date_minor_breaks = "3 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 5000) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "6 hours",
date_minor_breaks = "3 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 5000) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "12 hours",
date_minor_breaks = "6 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 50) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "12 hours",
date_minor_breaks = "6 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 50) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "24 hours",
date_minor_breaks = "12 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 500) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "24 hours",
date_minor_breaks = "12 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
#binwidth permet de paramétrer la largeur des barres
meilleur_graph<-ggplot(tweets_UniGE, aes(x = created_at)) + geom_histogram(binwidth = 5000) +
# nous utilisons la fonction `scale_x_datetime` pour manipuler les données horaires
scale_x_datetime(date_breaks = "24 hours",
date_minor_breaks = "12 hours",
date_labels = "%d-%m, %Hh",
name = "Date et heure du tweet") +
scale_y_continuous(name = "Nombre de tweets")
meilleur_graph
